{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Weiyiqi/VS_Code/Node_Test_Project/mobileClient/screens/Items.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\nimport { FlatList } from \"react-native-gesture-handler\";\n\nvar Items = function Items(_ref) {\n  var navigation = _ref.navigation;\n  console.log(navigation);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var list = navigation.getParam('list');\n  console.log(list);\n\n  var getItems = function getItems() {\n    var response, jsonData;\n    return _regeneratorRuntime.async(function getItems$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/items/\" + list.list_id, {\n              method: \"GET\"\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            jsonData = _context.sent;\n            setItems(jsonData);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0.message);\n\n          case 13:\n            ;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getItems();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, list.description), React.createElement(Table, {\n    borderStyle: {\n      borderWidth: 2,\n      borderColor: '#c8e1ff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, items.map(function (item) {\n    return React.createElement(TableWrapper, {\n      key: item.item_id,\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, React.createElement(Cell, {\n      data: item.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }), React.createElement(Cell, {\n      data: item.done,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }), React.createElement(Cell, {\n      data: \"Delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Delete\", React.createElement(Button, {\n      onPress: function onPress() {\n        return deleteList(list.list_id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Delete\")));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  head: {\n    height: 40,\n    backgroundColor: '#808B97'\n  },\n  text: {\n    margin: 6\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#FFF1C1'\n  },\n  btn: {\n    width: 58,\n    height: 18,\n    backgroundColor: '#78B7BB',\n    borderRadius: 2\n  },\n  btnText: {\n    textAlign: 'center',\n    color: '#fff'\n  }\n});\nexport default Items;","map":{"version":3,"sources":["/Users/Weiyiqi/VS_Code/Node_Test_Project/mobileClient/screens/Items.js"],"names":["React","Fragment","useState","useEffect","Table","TableWrapper","Row","Rows","Col","Cols","Cell","FlatList","Items","navigation","console","log","items","setItems","list","getParam","getItems","fetch","list_id","method","response","json","jsonData","error","message","description","borderWidth","borderColor","map","item","item_id","styles","row","done","deleteList","StyleSheet","create","container","flex","padding","paddingTop","backgroundColor","head","height","text","margin","flexDirection","btn","width","borderRadius","btnText","textAlign","color"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from \"react\";\nimport { StyleSheet, Text, View, TextInput, Button, TouchableOpacity} from 'react-native';\nimport { Table, TableWrapper, Row, Rows, Col, Cols, Cell } from 'react-native-table-component';\nimport { FlatList } from \"react-native-gesture-handler\";\n\nconst Items=({navigation})=>{\n    console.log(navigation);\n    const [items, setItems]= useState([]);\n    const list=navigation.getParam('list');\n    console.log(list);\n    const getItems= async()=>{\n        try {\n            const response=await fetch(`http://localhost:5000/items/${list.list_id}`,{method:\"GET\"});\n            const jsonData=await response.json();\n            setItems(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        };\n    };\n\n    useEffect(() => {\n        getItems();\n      }, []);\n\n    \n    \n\n\n    return (\n        <View>\n            <Text>{list.description}</Text>\n            <Table borderStyle={{borderWidth: 2, borderColor: '#c8e1ff'}}>\n                \n                    {items.map((item)=>(\n                        <TableWrapper key={item.item_id} style={styles.row}>\n                         \n                        <Cell data={item.description}/>\n                        <Cell data={item.done}/>\n                        <Cell data=\"Delete\"/>\n                           \n                        \n                        <Col>\n                        Delete\n                        <Button onPress={()=>deleteList(list.list_id)}>Delete \n                            </Button>\n                            </Col>\n                        </TableWrapper>\n                    ))}\n                \n            </Table>\n        \n\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n    head: { height: 40, backgroundColor: '#808B97' },\n    text: { margin: 6 },\n    row: { flexDirection: 'row', backgroundColor: '#FFF1C1' },\n    btn: { width: 58, height: 18, backgroundColor: '#78B7BB',  borderRadius: 2 },\n    btnText: { textAlign: 'center', color: '#fff' }\n  });\n\nexport default Items;"]},"metadata":{},"sourceType":"module"}