{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Weiyiqi/VS_Code/Node_Test_Project/mobileClient/screens/Items.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nvar Items = function Items(_ref) {\n  var list = _ref.list;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var getItems = function getItems() {\n    var response, jsonData;\n    return _regeneratorRuntime.async(function getItems$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/items/\" + list.list_id, {\n              method: \"GET\"\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            jsonData = _context.sent;\n            setItems(jsonData);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0.message);\n\n          case 13:\n            ;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  useEffect(function () {\n    getItems();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"list.list_id\"));\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/Weiyiqi/VS_Code/Node_Test_Project/mobileClient/screens/Items.js"],"names":["FlatList","Items","list","useState","items","setItems","getItems","fetch","list_id","method","response","json","jsonData","console","error","message","useEffect"],"mappings":";;;;AACA,SAASA,QAAT,QAAyB,8BAAzB;;AAEA,IAAMC,KAAK,GAAC,SAANA,KAAM,OAAU;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACOC,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,MACXC,KADW;AAAA,MACJC,QADI;;AAElB,MAAMC,QAAQ,GAAE,SAAVA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEaC,KAAK,kCAAgCL,IAAI,CAACM,OAArC,EAA+C;AAACC,cAAAA,MAAM,EAAC;AAAR,aAA/C,CAFlB;;AAAA;AAEFC,YAAAA,QAFE;AAAA;AAAA,6CAGaA,QAAQ,CAACC,IAAT,EAHb;;AAAA;AAGFC,YAAAA,QAHE;AAIRP,YAAAA,QAAQ,CAACO,QAAD,CAAR;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAMRC,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAIC,OAAlB;;AANQ;AAOX;;AAPW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUAC,EAAAA,SAAS,CAAC,YAAM;AACZV,IAAAA,QAAQ;AACT,GAFM,EAEJ,EAFI,CAAT;AAQA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AA2BH,CA/CD;;AA0DA,eAAeL,KAAf","sourcesContent":["import { View } from \"react-native\";\nimport { FlatList } from \"react-native-gesture-handler\";\n\nconst Items=({list})=>{\n    const [items, setItems]= useState([]);\n    const getItems= async()=>{\n        try {\n            const response=await fetch(`http://localhost:5000/items/${list.list_id}`,{method:\"GET\"});\n            const jsonData=await response.json();\n            setItems(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        };\n    };\n\n    useEffect(() => {\n        getItems();\n      }, []);\n\n    \n    \n\n\n    return (\n        <View>\n            <Text>list.list_id</Text>\n            {/* <Table borderStyle={{borderWidth: 2, borderColor: '#c8e1ff'}}>\n                \n                    {items.map((item)=>(\n                        <TableWrapper key={item.item_id} style={styles.row}>\n                         \n                        <Cell data={item.description}/>\n                        <Cell data={item.done}/>\n                        <Cell data=\"Delete\"/>\n                           \n                        \n                        <Col>\n                        Delete\n                        <Button onPress={()=>deleteList(list.list_id)}>Delete \n                            </Button>\n                            </Col>\n                        </TableWrapper>\n                    ))}\n                \n            </Table> */}\n        \n\n\n        </View>\n    )\n}\n\n// const styles = StyleSheet.create({\n//     container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\n//     head: { height: 40, backgroundColor: '#808B97' },\n//     text: { margin: 6 },\n//     row: { flexDirection: 'row', backgroundColor: '#FFF1C1' },\n//     btn: { width: 58, height: 18, backgroundColor: '#78B7BB',  borderRadius: 2 },\n//     btnText: { textAlign: 'center', color: '#fff' }\n//   });\n\nexport default Items;"]},"metadata":{},"sourceType":"module"}